version: 1
schemas:
- id: l
  title: language
  desc: programming language
  parent: root
  namespace: true
  template: l.temp
  children:
    - pattern: op
      title: operator
      children:
        - pattern: comment
          desc: "how to do comments"
        - pattern: create
          desc: "creating variables"
        - pattern: compare
          desc: "comparing variables"
        - pattern: inspect
          desc: "how to introspect variables"
        - pattern: destructure
          desc: "how to destructure variables"
    - pattern: d
      title: data structure
      children:
        - pattern: boolean
        - pattern: string
          children:
            - pattern: regex
            - pattern: format
              desc: "how to format strings"
        - pattern: array
        - pattern: dict
        - pattern: set
        - pattern: iterator
        - pattern: bottom
        - pattern: array
        - pattern: dict
        - pattern: set
        - pattern: iterator
        - pattern: bottom
    - pattern: flow
    - pattern: lib
      desc: "popular libraries"
      namespace: true
    - pattern: dev
      children:
      - pattern: migration
      - pattern: runtime
      - pattern: mode
      - pattern: upgrade
      - pattern: lib
        desc: "how to develop a library"
        children:
          - pattern: publish
          - pattern: binary
            desc: "how to create a static binary"
          - pattern: import
            desc: "how to import a library"
          - pattern: export
            desc: "how to export a library"
          - pattern: dynamic
            desc: "how to dynamically inspect and load a library"
    - pattern: t
      title: topic
    - pattern: files
      desc: "working with file system"
      children:
        - pattern: io
        - pattern: path
        - pattern: inspect
    - pattern: oo
    - pattern: func
    - pattern: types
    - pattern: qa
      children: 
        - pattern: tests
        - pattern: profile
        - pattern: debug
    - pattern: opt
      title: optimization
    - pattern: m
      title: meta
      children: 
        - pattern: versions
# --- dev
- id: files
  children:
    - io
    - path
    - files.inspect
- id: files.inspect
  pattern: inspect
- id: path
# --- topics
- id: t
  title: topic
  children:
    - dist
    - system
    - net
    - cache
    - time
    - image
    - math
    - web
    - parser
    - automation
    - config
    - validation
    - design
    - security
- id: design
  desc: viz design
- id: cache
- id: config
  desc: config management
- id: validation
- id: math
- id: image
  desc: image processing
- id: web
  children:
    - crm
    - web.security
- id: web.security
  pattern: security
- id: crm
- id: net
  desc: network and web
  children:
    - email
- id: email
- id: system
  children:
    - uuid
    - cli
    - shell
- id: shell
  desc: execute shell commands
- id: cli
  desc: generate cli interface
- id: uuid
- id: exec
  desc: "executing system comm"
- id: io
- id: migration
- id: mode
  desc: |
    eg. 'strict' mode in javascript
   
# --- oo
- id: oo
  title: object oriented
  children:
    - scope
    - inheritance

- id: scope
- id: inheritance

# --- func
- id: func
  title: functional

# --- flow
- id: flow
  children:
    - if
    - while
- id: if
- id: while

# --- types
- id: types
  children:
    - generics
    - modifiers
    - union
    - intersection
    - interface
- id: generics
- id: modifiers
- id: union
- id: intersection
- id: interface

# --- time
- id: time
- id: parser
- id: security
# --- dist
- id: dist
  desc: distributed systems
  children:
    - queues
- id: queues
- id: automation