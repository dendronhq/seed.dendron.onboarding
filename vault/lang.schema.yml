version: 1
schemas:
- id: l
  title: language
  desc: programming language
  parent: root
  data:
    namespace: true
  children:
    - operator
    - d
    - flow
    - lib
    - dev
    - t
    - files
    - oo
    - func
    - types
    - qa
    - opt
    - m
- id: m
  title: meta
  children: [versions]
- id: versions
- id: opt
  title: optimization
- id: qa
  children: 
    - tests
    - profile
    - debug
- id: debug
- id: profile
- id: tests
# --- operator
- id: operator
  pattern: op
  children:
    - comment
    - create
    - compare
    - equal
    - scope
    - inspect
    - format
    - iterate
    - destructure
- id: comment
- id: create
- id: compare
- id: equal
  sections:
    - value
    - reference
- id: scope
- id: inspect
- id: format
- id: iterate
- id: destructure
  sections:
    - array
    - obj

# --- data
- id: d
  title: data structure
  children:
    - boolean
    - string
    - array
    - dict
    - csv
    - json
    - set
    - validation
    - iterator
    - bottom
- id: validation
  description: "runtime validation of data"
- id: boolean
- id: string
  children:
    - regex
- id: regex
- id: set
- id: array
- id: dict
  children:
    - defaultdict
- id: defaultdict
- id: csv
- id: json
- id: iterator
- id: bottom 
# --- dev
- id: dev
  desc: "dev stuff"
  children:
    - dev.lib
    - migration
    - runtime
    - mode
    - upgrade
- id: upgrade
- id: files
  children:
    - io
    - path
    - files.inspect
  sections:
  - zip
  - nav
- id: files.inspect
  pattern: inspect
  sections:
    - binary # check if file is binary
- id: path
- id: runtime
  desc: "java, .net, etc"
- id: lib
  namespace: true
- id: import
  sections:
  - dynamic
  - reload

# --- deb.lib
- id: "dev.lib"
  title: lib
  pattern: lib
  children:
    - publish
    - binary
    - import
    - export
    - dynamic
- id: dynamic
  desc: dynamically inspecting and modifying lib
- id: publish
- id: binary
  desc: how to create executable binaries
- id: export
# --- topics
- id: t
  title: topic
  children:
    - dist
    - system
    - net
    - cache
    - time
    - image
    - math
    - web
    - parser
    - automation
    - config
    - validation
    - design
    - security
- id: design
  desc: viz design
- id: cache
- id: config
  desc: config management
- id: validation
- id: math
- id: image
  desc: image processing
- id: web
  sections:
    - static-sites
  children:
    - crm
    - web.security
- id: web.security
  pattern: security
- id: crm
- id: net
  desc: network and web
  children:
    - email
- id: email
- id: system
  children:
    - uuid
    - cli
    - shell
- id: shell
  desc: execute shell commands
  sections:
    - env
    - exec
    - fork
    - eval
- id: cli
  desc: generate cli interface
- id: uuid
- id: exec
  desc: "executing system comm"
- id: io
- id: migration
- id: mode
  desc: |
    eg. 'strict' mode in javascript
   
# --- oo
- id: oo
  title: object oriented
  children:
    - scope
    - inheritance

- id: scope
  sections:
    - public
    - protected
    - private

- id: inheritance

# --- func
- id: func
  title: functional
  sections:
    - positional
    - varargs
    - keyword
    - mixed
    - defaults

# --- flow
- id: flow
  sections.children:
    - ternary
  children:
    - if
    - while
- id: if
- id: while

# --- types
- id: types
  children:
    - generics
    - modifiers
    - union
    - intersection
    - interface
- id: generics
- id: modifiers
  sections:
    - partial
    - readonly
- id: union
- id: intersection
- id: interface

# --- time
- id: time
- id: parser
- id: security
# docutils
# systemd
# - cpuinfo
# concurrency
# - threads
# - channels
# operators
# - bitops

# --- dist
- id: dist
  desc: distributed systems
  children:
    - queues
- id: queues
- id: automation